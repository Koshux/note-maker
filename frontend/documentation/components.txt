Frontend components for `note-maker`:
-------------------------------------
- Unsaved Notes
  - Parent note container to store all notes to persist to DB (lost on refresh)
  - state = { remoteNotes: [], localNotes: [] }
- Interface/store for requests
  - CREATE
  - FIND_ALL -> returns totalResourceCount
- Note creator
  - const [localNotes, setLocalNotes] = React.useState(0)
  - localNotes.push(document.getElement('input').value()) // the value of the input field
  - Input field
  - "Send" button can send one to many notes
    - setLocalNotes([]) (empty out array)
- Notes viewer (datatable):
  - Columns:
    - Description
    - Creation Date
  - Features:
    - Load notes from http://localhost:8081/lanzonprojects/api/notes
    - Sort by Creation Date [ASC|DESC]
    - Pagination with 10 records per page
      - Next/Prev changes limit & offset on JSON:API request


index.js --> ReactJS entrypoint renders app.js (React.render(<App />)
App.js --> Parent container for entire app

                                 app
                                  |
	        ------------------------------------------------------
	        |                                                    |
     note-creator                                        notes-viewer


Tutorials:
-----------
Notes app using React Hooks:
----------------------------
1. https://blog.flexiple.com/react-hooks-learn-by-building-a-notes-app/
2. Auto-focus on input field:
 2.1. https://reactjs.org/docs/refs-and-the-dom.html#adding-a-ref-to-a-class-component
3. CORS origin proxy via package.JSON

material-table:
---------------
1. https://material-table.com/#/docs/features/sorting

material-ui (reactjs):
----------------------
1. https://material-ui.com/components/grid/

Unit-testing:
-------------
1. https://www.valentinog.com/blog/testing-react/
2. https://www.robinwieruch.de/react-hooks-fetch-data/
3. https://www.robinwieruch.de/react-fetching-data/#react-fetch-data-async-await
